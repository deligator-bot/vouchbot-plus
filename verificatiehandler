import discord
from discord.ext import tasks, commands
from datetime import datetime, timedelta

class VerificationHandler(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.pending_verification = {}  # user_id -> {"inviter": ..., "joined_at": ..., "attempts": ..., "channel_id": ...}
        self.blacklist = set()
        self.cleanup_loop.start()

    @commands.Cog.listener()
    async def on_member_join(self, member):
        if member.bot:
            return

        guild = member.guild
        invites = await guild.invites()

        # Zoek wie deze persoon heeft uitgenodigd via actieve invites
        invite_cog = self.bot.get_cog("InviteManager")
        inviter_id = None
        for invite in invites:
            if invite.code in invite_cog.active_invites:
                inviter_id = invite_cog.active_invites[invite.code]["inviter_id"]
                invite_cog.active_invites[invite.code]["used"] = True
                break

        # Blacklist check
        if member.id in self.blacklist:
            await member.send("üö´ Je bent geblacklist van deze server.")
            await member.kick(reason="Zwarte lijst")
            return

        # Maak tijdelijk priv√©-verificatiekanaal
        overwrites = {
            guild.default_role: discord.PermissionOverwrite(read_messages=False),
            member: discord.PermissionOverwrite(read_messages=True, send_messages=True),
        }
        channel_name = f"verify-{member.name}".lower().replace(" ", "-")
        verify_channel = await guild.create_text_channel(channel_name, overwrites=overwrites)

        # Sla pending-verificatie op
        self.pending_verification[member.id] = {
            "inviter": inviter_id,
            "joined_at": datetime.utcnow(),
            "attempts": 1,
            "channel_id": verify_channel.id
        }

        # Stuur verificatiebericht
        inviter_mention = f"<@{inviter_id}>" if inviter_id else "onbekend"
        await verify_channel.send(
            f"üÜï Nieuw lid: {member.mention}\nVoucher: {inviter_mention}\n\n"
            f"{inviter_mention}, bevestig met ‚úÖ dat je deze speler vertrouwt."
        )

    @tasks.loop(seconds=60)
    async def cleanup_loop(self):
        now = datetime.utcnow()
        to_kick = []

        for user_id, data in self.pending_verification.items():
            if now - data["joined_at"] > timedelta(minutes=10):
                to_kick.append(user_id)

        for uid in to_kick:
            user = self.bot.get_user(uid)
            if user:
                guild = discord.utils.get(self.bot.guilds)
                member = guild.get_member(uid)
                if member:
                    await member.send("‚åõ Je bent verwijderd omdat je niet op tijd geverifieerd werd.")
                    await member.kick(reason="Geen vouch na 10 minuten.")

                    current = self.pending_verification[uid]

                    # Voeg poging toe of zet op blacklist
                    if current["attempts"] >= 2:
                        self.blacklist.add(uid)
                        log_channel = discord.utils.get(guild.text_channels, name="blacklist-log")
                        if log_channel:
                            await log_channel.send(f"‚ö†Ô∏è Lid {member.name} is geblacklist wegens 2 joinpogingen zonder vouch.")

                    # Verwijder tijdelijk verificatiekanaal
                    channel_id = current.get("channel_id")
                    if channel_id:
                        channel = guild.get_channel(channel_id)
                        if channel:
                            await channel.delete(reason="Verificatie verlopen")

            del self.pending_verification[uid]

    @commands.command()
    @commands.has_permissions(administrator=True)
    async def unblacklist(self, ctx, member: discord.Member):
        if member.id in self.blacklist:
            self.blacklist.remove(member.id)
            await ctx.send(f"‚úÖ {member.name} is van de blacklist gehaald.")
        else:
            await ctx.send("‚ùå Deze gebruiker staat niet op de blacklist.")

async def setup(bot):
    await bot.add_cog(VerificationHandler(bot))
